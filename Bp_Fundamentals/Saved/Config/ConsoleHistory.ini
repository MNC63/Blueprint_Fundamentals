[ConsoleHistory]
History=t.MaxFPS 30

[ConsoleHistoryPython]
History=clear
History="import unreal\r\n\r\ncube = unreal.load_asset(\'Engine\\Content\\BasicShapes\\Cube\')\r\nobj = unreal.EditorLevelLibrary.spawn_actor_from_object(cube, Unreal.vector(0, 0, 0))"
History="import unreal\r\n\r\ncube = unreal.load_asset(\'/Engine/Content/BasicShapes/Cube\')\r\nobj = unreal.EditorLevelLibrary.spawn_actor_from_object(cube, unreal.Vector(0, 0, 0))"
History="import unreal\r\n\r\n# Load built-in Cube asset\r\ncube = unreal.load_asset(\'/Engine/BasicShapes/Cube\')\r\n\r\n# Check if it loaded correctly\r\nif cube:\r\n    # Spawn the cube in the level at location (0, 0, 0)\r\n    obj = unreal.EditorLevelLibrary.spawn_actor_from_object(cube, unreal.Vector(0, 0, 0))\r\nelse:\r\n    print(\"Asset not found!\")\r\n"
History="import unreal\r\n\r\n\r\ndef make_blueprint(package_path: str, asset_name: str):\r\n    \"\"\"\r\n    Usage example: \r\n    package_path = \"/Game/Blueprints\"\r\n    asset_name = \"BP_Trebuchet20\"\r\n    blueprint = make_blueprint(package_path, asset_name)\r\n    \"\"\"\r\n\r\n    factory = unreal.BlueprintFactory()\r\n    factory.set_editor_property(name=\"parent_class\", value=unreal.Actor)\r\n\r\n    asset_tools: unreal.AssetTools = unreal.AssetToolsHelpers.get_asset_tools()\r\n\r\n    asset: Object = asset_tools.create_asset(asset_name=asset_name,\r\n                                             package_path=package_path,\r\n                                             asset_class=None,\r\n                                             factory=factory)\r\n    if not isinstance(asset, unreal.Blueprint):\r\n        raise Exception(\"Failed to create blueprint asset\")\r\n    blueprint: unreal.Blueprint = asset  # noqa\r\n    return blueprint"
History=unreal.EditorAssetLibrary.open_editor_for_assets([blueprint])
History=mnc63 = máº¡ke_blueprint("/Game/Blueprints", "BP_Trebuchet20")
History=motivation_bp = make_blueprint("/Game/BP_Cua_Tui", "BP_Motivation_230")
History=mnc63 = make_blueprint("/Game/Blueprints", "BP_Trebuchet20")
History="\"\"\"\r\nFunction to add a subobject -- component -- to a blueprint.\r\n\"\"\"\r\ndef add_subobject(subsystem: unreal.SubobjectDataSubsystem,\r\n                  blueprint: unreal.Blueprint,\r\n                  new_class,\r\n                  name: str) -> (unreal.SubobjectDataHandle, unreal.Object):\r\n    \"\"\"\r\n    Usage example:\r\n    subsystem: unreal.SubobjectDataSubsystem = unreal.get_engine_subsystem(\r\n        unreal.SubobjectDataSubsystem)\r\n\r\n    sub_handle, component = add_subobject(subsystem,\r\n                            blueprint,\r\n                            new_class=unreal.RotatingMovementComponent,\r\n                            name=\"RotatingComponent\")\r\n\r\n    \"\"\"\r\n\r\n    root_data_handle: unreal.SubobjectDataHandle = subsystem.k2_gather_subobject_data_for_blueprint(\r\n        context=blueprint)[0]\r\n\r\n    sub_handle, fail_reason = subsystem.add_new_subobject(\r\n        params=unreal.AddNewSubobjectParams(\r\n            parent_handle=root_data_handle,\r\n            new_class=new_class,\r\n            blueprint_context=blueprint))\r\n\r\n    if not fail_reason.is_empty():\r\n        raise Exception(\r\n            \"ERROR from sub_object_subsystem.add_new_subobject: {fail_reason}\")\r\n\r\n    subsystem.rename_subobject(handle=sub_handle, new_name=unreal.Text(name))\r\n    subsystem.attach_subobject(\r\n        owner_handle=root_data_handle, child_to_add_handle=sub_handle)\r\n\r\n    BFL = unreal.SubobjectDataBlueprintFunctionLibrary\r\n    obj: Object = BFL.get_object(BFL.get_data(sub_handle))\r\n    return sub_handle, obj"
History="subsystem: unreal.SubobjectDataSubsystem = unreal.get_engine_subsystem(\r\n    unreal.SubobjectDataSubsystem)\r\n\r\n_, rotating = add_subobject(subsystem=subsystem,\r\n                            blueprint=Trebuchet20,\r\n                            new_class=unreal.RotatingMovementComponent,\r\n                            name=\"RotatingComponent\")"
History="subsystem: unreal.SubobjectDataSubsystem = unreal.get_engine_subsystem(\r\n    unreal.SubobjectDataSubsystem)\r\n\r\n_, rotating = add_subobject(subsystem=subsystem,\r\n                            blueprint=BP_Trebuchet20,\r\n                            new_class=unreal.RotatingMovementComponent,\r\n                            name=\"RotatingComponent\")"
History="_, rotating = add_subobject(subsystem=subsystem,\r\n                            blueprint=mnc63,\r\n                            new_class=unreal.RotatingMovementComponent,\r\n                            name=\"RotatingComponent\")\r\n"

